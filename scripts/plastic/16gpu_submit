#!/bin/bash
#SBATCH --job-name=plastic
#SBATCH --output=md_%j.log     
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=16
#SBATCH --partition=gpuGTX
#SBATCH --exclude=compute-21-1,compute-20-1,compute-19-1
#SBATCH --gpus-per-node=1

export TMPDIR=/state/partition1
source /home/spack-user/spack/share/spack/setup-env.sh
spack load gromacs/z7lm
#spack load gromacs@2020.4/5et # gtx2080 (compute 21-1,    CPUs 12, gpuGTX)
#spack load gromacs@2020.4/fve # gtx980  (compute-16-4,    CPUs 8,  gpuGTX)
#spack load gromacs@2020.4/7hl # titan   (compute-17,18-1, CPUs 8,  gpuGTX)
#spack load gromacs@2020.4/y2h # gtx1080 (compute-20-1,    CPUs 12, gpuGTX) 
#spack load gromacs@2021.3/qws # rtx3090 (compute 22-0,    CPUs 32, gpuRTX)
#spack load gromacs@2020.4/rsk # rtx3090 (compute-15-0,    CPUs 32, gpuRTX)
### (compute-24-1, CPUs 32, gpu:rtx4080, gpuRTX)

echo "SLURM_JOBID=$SLURM_JOBID"
echo "SLURM_JOB_NODELIST=$SLURM_JOB_NODELIST"
echo "SLURM_NNODES=$SLURM_NNODES "
echo "working directory= $SLURM_SUBMIT_DIR "
echo "tmp directory=$TMPDIR"
echo "NPROCS=$SLURM_NPROCS"
echo "Number of CPUs per task=$SLURM_CPUS_PER_TASK"
echo "Count of processors avaiable to the job on this node=$SLURM_JOB_CPUS_PER_NODE"
echo "Number of CPUs requested per allocated GPU=$SLURM_CPUS_PER_GPU"
echo "Number of GPUs requested=$SLURM_GPUS"
echo "Number of tasks=$SLURM_NTASKS"

# no coredumps
ulimit -S -c 0
ulimit -s unlimited
export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK

mkdir -p $TMPDIR/$USER/$SLURM_JOBID
cp -rf $SLURM_SUBMIT_DIR/* $TMPDIR/$USER/$SLURM_JOBID
cd $TMPDIR/$USER/$SLURM_JOBID

# run the simulation
srun --mpi=pmix gmx_mpi mdrun -deffnm md -v -ntomp $SLURM_CPUS_PER_TASK >& md.out

# extract trajectories
echo -e '"Other"|"Ion" \nq' | srun --mpi=pmix gmx_mpi make_ndx -f md.tpr -o pl_ion.ndx &> post_proc.out
echo -e "Other_Ion \nSystem \nSystem" | srun --mpi=pmix gmx_mpi trjconv -f md.xtc -s md.tpr -center -pbc cluster -n pl_ion.ndx -dt 1000 -o dry_cluster.xtc &>> post_proc.out
echo -e "Other \nOther \nOther_Ion" | srun --mpi=pmix gmx_mpi trjconv -f dry_cluster -s md.tpr -fit rot+trans -center -o dry.xtc -n pl_ion.ndx &>> post_proc.out
echo "Other_Ion" | srun --mpi=pmix gmx_mpi trjconv -f dry_cluster.xtc -s md.tpr -n pl_ion.ndx -dump 0 -o dry.gro &>> post_proc.out

# extract structural parameters
echo 'Other Other' | srun --mpi=pmix gmx_mpi rms -f dry_cluster.xtc -s md.tpr -o rmsd.xvg -xvg none &>> post_proc.out
echo 'Other' | srun --mpi=pmix gmx_mpi gyrate -f dry_cluster.xtc -s md.tpr -o gyr.xvg -xvg none &>> post_proc.out
rm dry_cluster.xtc

# energy-related params
echo 'Potential ' | srun --mpi=pmix gmx_mpi energy -f md.edr -o pe.xvg -xvg none &>> post_proc.out
echo 'Kinetic ' | srun --mpi=pmix gmx_mpi energy -f md.edr -o ke.xvg -xvg none &>> post_proc.out
echo 'Temperature ' | srun --mpi=pmix gmx_mpi energy -f md.edr -o temp.xvg -xvg none &>> post_proc.out
echo 'Pressure ' | srun --mpi=pmix gmx_mpi energy -f md.edr -o pres.xvg -xvg none &>> post_proc.out

# create a final plastic molecule for the next stage
echo 'Other' | srun --mpi=pmix gmx_mpi editconf -f md.gro -n pl_ion.ndx -o plastic.pdb &>> post_proc.out

cp -rf $TMPDIR/$USER/$SLURM_JOBID/* $SLURM_SUBMIT_DIR/

rm -rf $TMPDIR/$USER/$SLURM_JOBID
exit

